#pragma once

#include <sds.h>
#include <assert.h>
#include <stdio.h>

#ifdef __cplusplus
extern "C" {
#endif

struct parg_mesh_s {
    parg_buffer* coords;
    parg_buffer* uvs;
    parg_buffer* normals;
    parg_buffer* indices;
    int ntriangles;
};

sds parg_token_to_sds(parg_token token);
parg_buffer* parg_buffer_from_path(const char* filepath);
sds parg_asset_whereami();
void parg_asset_set_baseurl(const char* url);
sds parg_asset_baseurl();
int parg_asset_fileexists(sds fullpath);
int parg_asset_download(const char* filename, sds targetpath);
parg_buffer* parg_asset_to_buffer(parg_token id);

// This takes two human-readable strings: the key and the metadata. The key
// should not be generated by sprintf because it is used as a grouping key in
// systems like Sentry.  The metadata, on the other hand, can be unique.

#define parg_assert(expr, exception_key)                \
    if (!(expr)) {                                                         \
      printf("%s\n", exception_key);					\
    }                                                                      \
    assert(expr);

#define parg_verify(expr, exception_key, exception_metadata)                \
    if (!(expr)) {                                                         \
      printf("%s: %s\n", exception_key, (char*) exception_metadata);	\
    }                                                                      \
    assert(expr);

#ifdef __cplusplus
}
#endif
